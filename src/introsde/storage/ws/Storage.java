
package introsde.storage.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import introsde.adapter.ws.Exercise;
import introsde.adapter.ws.Food;
import introsde.adapter.ws.Recipe;
import introsde.localdatabase.soap.Measure;
import introsde.localdatabase.soap.Person;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Storage", targetNamespace = "http://ws.storage.introsde/")
@XmlSeeAlso({
    introsde.localdatabase.soap.ObjectFactory.class,
    introsde.adapter.ws.ObjectFactory.class,
    introsde.storage.ws.ObjectFactory.class
})
public interface Storage {


    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreatePersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/createPersonRequest", output = "http://ws.storage.introsde/Storage/createPersonResponse")
    public void createPerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Person>
     */
    @WebMethod
    @WebResult(name = "people", targetNamespace = "")
    @RequestWrapper(localName = "getPeopleList", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetPeopleList")
    @ResponseWrapper(localName = "getPeopleListResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetPeopleListResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getPeopleListRequest", output = "http://ws.storage.introsde/Storage/getPeopleListResponse")
    public List<Person> getPeopleList();

    /**
     * 
     * @param idPerson
     * @return
     *     returns introsde.localdatabase.soap.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readPersonRequest", output = "http://ws.storage.introsde/Storage/readPersonResponse")
    public Person readPerson(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/updatePersonRequest", output = "http://ws.storage.introsde/Storage/updatePersonResponse")
    public void updatePerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @param idPerson
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeletePersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/deletePersonRequest", output = "http://ws.storage.introsde/Storage/deletePersonResponse")
    public int deletePerson(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson);

    /**
     * 
     * @param chatId
     * @return
     *     returns introsde.localdatabase.soap.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "getPersonByChatId", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetPersonByChatId")
    @ResponseWrapper(localName = "getPersonByChatIdResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetPersonByChatIdResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getPersonByChatIdRequest", output = "http://ws.storage.introsde/Storage/getPersonByChatIdResponse")
    public Person getPersonByChatId(
        @WebParam(name = "chatId", targetNamespace = "")
        Long chatId);

    /**
     * 
     * @param idPerson
     * @param measureType
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readPersonHistory", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonHistory")
    @ResponseWrapper(localName = "readPersonHistoryResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonHistoryResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readPersonHistoryRequest", output = "http://ws.storage.introsde/Storage/readPersonHistoryResponse")
    public List<Measure> readPersonHistory(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readMeasureTypes", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadMeasureTypes")
    @ResponseWrapper(localName = "readMeasureTypesResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadMeasureTypesResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readMeasureTypesRequest", output = "http://ws.storage.introsde/Storage/readMeasureTypesResponse")
    public List<Measure> readMeasureTypes();

    /**
     * 
     * @param measureId
     * @param idPerson
     * @param measureType
     * @return
     *     returns introsde.localdatabase.soap.Measure
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasure", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonMeasure")
    @ResponseWrapper(localName = "readPersonMeasureResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonMeasureResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readPersonMeasureRequest", output = "http://ws.storage.introsde/Storage/readPersonMeasureResponse")
    public Measure readPersonMeasure(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType,
        @WebParam(name = "measureId", targetNamespace = "")
        Long measureId);

    /**
     * 
     * @param idPerson
     * @param measure
     */
    @WebMethod
    @RequestWrapper(localName = "savePersonMeasure", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SavePersonMeasure")
    @ResponseWrapper(localName = "savePersonMeasureResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SavePersonMeasureResponse")
    @Action(input = "http://ws.storage.introsde/Storage/savePersonMeasureRequest", output = "http://ws.storage.introsde/Storage/savePersonMeasureResponse")
    public void savePersonMeasure(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measure", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Measure> measure);

    /**
     * 
     * @param idPerson
     * @param measure
     */
    @WebMethod
    @RequestWrapper(localName = "updatePersonMeasure", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePersonMeasure")
    @ResponseWrapper(localName = "updatePersonMeasureResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePersonMeasureResponse")
    @Action(input = "http://ws.storage.introsde/Storage/updatePersonMeasureRequest", output = "http://ws.storage.introsde/Storage/updatePersonMeasureResponse")
    public void updatePersonMeasure(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measure", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Measure> measure);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.adapter.ws.Exercise>
     */
    @WebMethod
    @WebResult(name = "exercises", targetNamespace = "")
    @RequestWrapper(localName = "getExercises", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetExercises")
    @ResponseWrapper(localName = "getExercisesResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetExercisesResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getExercisesRequest", output = "http://ws.storage.introsde/Storage/getExercisesResponse")
    public List<Exercise> getExercises();

    /**
     * 
     * @param foodId
     * @return
     *     returns introsde.adapter.ws.Food
     */
    @WebMethod
    @WebResult(name = "food", targetNamespace = "")
    @RequestWrapper(localName = "getFood", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetFood")
    @ResponseWrapper(localName = "getFoodResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetFoodResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getFoodRequest", output = "http://ws.storage.introsde/Storage/getFoodResponse")
    public Food getFood(
        @WebParam(name = "foodId", targetNamespace = "")
        int foodId);

    /**
     * 
     * @param text
     * @return
     *     returns java.util.List<introsde.adapter.ws.Food>
     */
    @WebMethod
    @WebResult(name = "foods", targetNamespace = "")
    @RequestWrapper(localName = "searchFood", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SearchFood")
    @ResponseWrapper(localName = "searchFoodResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SearchFoodResponse")
    @Action(input = "http://ws.storage.introsde/Storage/searchFoodRequest", output = "http://ws.storage.introsde/Storage/searchFoodResponse")
    public List<Food> searchFood(
        @WebParam(name = "text", targetNamespace = "")
        String text);

    /**
     * 
     * @param weightGoal
     * @param weight
     * @param user
     * @param height
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "setInfo", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SetInfo")
    @ResponseWrapper(localName = "setInfoResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SetInfoResponse")
    @Action(input = "http://ws.storage.introsde/Storage/setInfoRequest", output = "http://ws.storage.introsde/Storage/setInfoResponse")
    public boolean setInfo(
        @WebParam(name = "user", targetNamespace = "")
        Person user,
        @WebParam(name = "weight", targetNamespace = "")
        double weight,
        @WebParam(name = "height", targetNamespace = "")
        double height,
        @WebParam(name = "weight_goal", targetNamespace = "")
        double weightGoal);

    /**
     * 
     * @param date
     * @param user
     * @return
     *     returns java.util.List<introsde.adapter.ws.Exercise>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getExerciseEntry", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetExerciseEntry")
    @ResponseWrapper(localName = "getExerciseEntryResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetExerciseEntryResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getExerciseEntryRequest", output = "http://ws.storage.introsde/Storage/getExerciseEntryResponse")
    public List<Exercise> getExerciseEntry(
        @WebParam(name = "user", targetNamespace = "")
        Person user,
        @WebParam(name = "date", targetNamespace = "")
        int date);

    /**
     * 
     * @param idExercise
     * @param minutes
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editExerciseEntry", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.EditExerciseEntry")
    @ResponseWrapper(localName = "editExerciseEntryResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.EditExerciseEntryResponse")
    @Action(input = "http://ws.storage.introsde/Storage/editExerciseEntryRequest", output = "http://ws.storage.introsde/Storage/editExerciseEntryResponse")
    public boolean editExerciseEntry(
        @WebParam(name = "user", targetNamespace = "")
        Person user,
        @WebParam(name = "id_exercise", targetNamespace = "")
        int idExercise,
        @WebParam(name = "minutes", targetNamespace = "")
        int minutes);

    /**
     * 
     * @param days
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveTemplate", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SaveTemplate")
    @ResponseWrapper(localName = "saveTemplateResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SaveTemplateResponse")
    @Action(input = "http://ws.storage.introsde/Storage/saveTemplateRequest", output = "http://ws.storage.introsde/Storage/saveTemplateResponse")
    public boolean saveTemplate(
        @WebParam(name = "user", targetNamespace = "")
        Person user,
        @WebParam(name = "days", targetNamespace = "")
        int days);

    /**
     * 
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "commitDay", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CommitDay")
    @ResponseWrapper(localName = "commitDayResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CommitDayResponse")
    @Action(input = "http://ws.storage.introsde/Storage/commitDayRequest", output = "http://ws.storage.introsde/Storage/commitDayResponse")
    public boolean commitDay(
        @WebParam(name = "user", targetNamespace = "")
        Person user);

    /**
     * 
     * @param recipeId
     * @return
     *     returns introsde.adapter.ws.Recipe
     */
    @WebMethod
    @WebResult(name = "recipe", targetNamespace = "")
    @RequestWrapper(localName = "getRecipe", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetRecipe")
    @ResponseWrapper(localName = "getRecipeResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetRecipeResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getRecipeRequest", output = "http://ws.storage.introsde/Storage/getRecipeResponse")
    public Recipe getRecipe(
        @WebParam(name = "recipeId", targetNamespace = "")
        int recipeId);

    /**
     * 
     * @param text
     * @return
     *     returns java.util.List<introsde.adapter.ws.Recipe>
     */
    @WebMethod
    @WebResult(name = "recipes", targetNamespace = "")
    @RequestWrapper(localName = "searchRecipes", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SearchRecipes")
    @ResponseWrapper(localName = "searchRecipesResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SearchRecipesResponse")
    @Action(input = "http://ws.storage.introsde/Storage/searchRecipesRequest", output = "http://ws.storage.introsde/Storage/searchRecipesResponse")
    public List<Recipe> searchRecipes(
        @WebParam(name = "text", targetNamespace = "")
        String text);

}
