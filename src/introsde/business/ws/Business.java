
package introsde.business.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import introsde.adapter.ws.Exercise;
import introsde.localdatabase.soap.Measure;
import introsde.localdatabase.soap.Person;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Business", targetNamespace = "http://ws.business.introsde/")
@XmlSeeAlso({
    introsde.localdatabase.soap.ObjectFactory.class,
    introsde.adapter.ws.ObjectFactory.class,
    introsde.business.ws.ObjectFactory.class
})
public interface Business {


    /**
     * 
     * @param measure
     * @param chatId
     */
    @WebMethod
    @RequestWrapper(localName = "savePersonMeasure", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.SavePersonMeasure")
    @ResponseWrapper(localName = "savePersonMeasureResponse", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.SavePersonMeasureResponse")
    @Action(input = "http://ws.business.introsde/Business/savePersonMeasureRequest", output = "http://ws.business.introsde/Business/savePersonMeasureResponse")
    public void savePersonMeasure(
        @WebParam(name = "chatId", targetNamespace = "")
        Long chatId,
        @WebParam(name = "measure", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Measure> measure);

    /**
     * 
     * @param chatId
     * @param exercise
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(name = "calories", targetNamespace = "")
    @RequestWrapper(localName = "getCalories", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.GetCalories")
    @ResponseWrapper(localName = "getCaloriesResponse", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.GetCaloriesResponse")
    @Action(input = "http://ws.business.introsde/Business/getCaloriesRequest", output = "http://ws.business.introsde/Business/getCaloriesResponse")
    public double getCalories(
        @WebParam(name = "chatId", targetNamespace = "")
        Long chatId,
        @WebParam(name = "exercise", targetNamespace = "")
        Exercise exercise);

    /**
     * 
     * @param chatId
     * @return
     *     returns introsde.localdatabase.soap.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "getProfile", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.GetProfile")
    @ResponseWrapper(localName = "getProfileResponse", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.GetProfileResponse")
    @Action(input = "http://ws.business.introsde/Business/getProfileRequest", output = "http://ws.business.introsde/Business/getProfileResponse")
    public Person getProfile(
        @WebParam(name = "chatId", targetNamespace = "")
        Long chatId);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.UpdatePersonResponse")
    @Action(input = "http://ws.business.introsde/Business/updatePersonRequest", output = "http://ws.business.introsde/Business/updatePersonResponse")
    public void updatePerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://ws.business.introsde/", className = "introsde.business.ws.CreatePersonResponse")
    @Action(input = "http://ws.business.introsde/Business/createPersonRequest", output = "http://ws.business.introsde/Business/createPersonResponse")
    public void createPerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

}
